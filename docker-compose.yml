services:
  ########################### PHP ###########
  php1:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: php1
    working_dir: /var/www/html/my_php_code
    volumes:
      - ./:/var/www/html/my_php_code
    networks:
      - my_php_code_network

  php2:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: php2
    working_dir: /var/www/html/my_php_code
    volumes:
      - ./:/var/www/html/my_php_code
    networks:
      - my_php_code_network

  ########### Nginx Load Balancer ###########
  nginx:
    image: nginx:latest
    container_name: nginx_lb
    ports:
      - "8002:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - my_php_code_network
    depends_on:
      - php1
      - php2

  ########################### PostgreSQL ###########
  pg_primary:
      container_name: pg_primary
      image: postgis/postgis:16-3.4
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: root
        POSTGRES_DB: my_php_code_db
      ports:
        - "5432:5432"
      volumes:
        - pg_primary_data:/var/lib/postgresql/data
        - ./docker/db_conf/init.sql:/docker-entrypoint-initdb.d/init.sql
        - ./docker/db_conf/postgresql.conf:/etc/postgresql/postgresql.conf
        - ./docker/db_conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
      command: postgres -c config_file=/etc/postgresql/postgresql.conf
      networks:
        - my_php_code_network

  pg_replica:
      container_name: pg_replica
      image: postgis/postgis:16-3.4
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: root
        PGUSER: replicator
        PGPASSWORD: replicator_pass
      ports:
        - "5433:5432"
      volumes:
        - pg_replica_data:/var/lib/postgresql/data
        - ./docker/db_conf/init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh
        - ./docker/db_conf/postgresql.conf:/etc/postgresql/postgresql.conf
      depends_on:
        - pg_primary
      networks:
        - my_php_code_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - my_php_code_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - my_php_code_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - my_php_code_network
    depends_on:
      - prometheus

  php1_exporter:
    image: hipages/php-fpm_exporter:2
    environment:
      FPM_STATUS_URL: http://php1:9000/status
    networks:
      - my_php_code_network
    ports:
      - "9253:9253"
    depends_on:
      - php1

  php2_exporter:
    image: hipages/php-fpm_exporter:2
    environment:
      FPM_STATUS_URL: http://php2:9000/status
    networks:
      - my_php_code_network
    ports:
      - "9254:9253"
    depends_on:
      - php2

  websocket:
    build:
      context: ./docker/ws
      dockerfile: Dockerfile
    container_name: websocket
    ports:
      - "6001:6001"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=6001
    depends_on:
      - redis
    networks:
      - my_php_code_network


#  grpc_server:
#    container_name: grpc_server
#    build:
#      context: ./docker/php
#      dockerfile: Dockerfile
#    command: php ./entrypoint/grpc_server.php
#    depends_on:
#      - pg_primary
#    networks:
#      - my_php_code_network
#    ports:
#      - "50051:50051"

networks:
  my_php_code_network:
    driver: bridge

volumes:
  pg_primary_data:
  pg_replica_data:
